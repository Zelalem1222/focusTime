{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from 'react-native-paper';\nimport { RoundedButton } from \"../components/RoundedButton\";\nimport { spacing } from \"../utils/size\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Focus = function Focus(_ref) {\n  var addSubject = _ref.addSubject;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    subject = _useState2[0],\n    setSubject = _useState2[1];\n  console.log(subject);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.inputText,\n        onChangeText: setSubject,\n        label: \"What would you like to focus on?\"\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(RoundedButton, {\n          title: \"+\",\n          size: 50,\n          onPress: function onPress() {\n            return addSubject(subject);\n          }\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  inputText: {\n    flex: 1,\n    marginRight: spacing.sm\n  },\n  buttonContainer: {\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    padding: spacing.lg,\n    justifyContent: 'top',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["React","useState","TextInput","RoundedButton","spacing","Focus","addSubject","subject","setSubject","console","log","styles","container","inputContainer","inputText","buttonContainer","StyleSheet","create","flex","marginRight","sm","justifyContent","padding","lg","flexDirection"],"sources":["C:/Users/Zola/Desktop/React-projects/project/src/features/foucus.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { RoundedButton } from '../components/RoundedButton';\r\nimport { spacing } from '../utils/size'\r\n\r\nexport const Focus = ({ addSubject }) => {\r\n  const [subject, setSubject] = useState(null);\r\n  console.log(subject);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n        style={styles.inputText}\r\n          onChangeText={setSubject}\r\n          label=\"What would you like to focus on?\"\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n        <RoundedButton title='+' size={50} onPress={() => addSubject(subject)}/>\r\n        </View>\r\n      </View>\r\n      \r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  inputText : {\r\n   flex: 1,\r\n   marginRight: spacing.sm\r\n  },\r\n  buttonContainer:{\r\n   justifyContent: 'center'\r\n  },\r\n  inputContainer: {\r\n    padding: spacing.lg,\r\n    justifyContent: 'top',\r\n    flexDirection: 'row'\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAExC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,aAAa;AACtB,SAASC,OAAO;AAAuB;AAAA;AAEvC,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAChC,gBAA8BL,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCM,OAAO;IAAEC,UAAU;EAC1BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpB,OACE,KAAC,IAAI;IAAC,KAAK,EAAEI,MAAM,CAACC,SAAU;IAAA,UAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,cAAe;MAAA,WACjC,KAAC,SAAS;QACV,KAAK,EAAEF,MAAM,CAACG,SAAU;QACtB,YAAY,EAAEN,UAAW;QACzB,KAAK,EAAC;MAAkC,EACxC,EACF,KAAC,IAAI;QAAC,KAAK,EAAEG,MAAM,CAACI,eAAgB;QAAA,UACpC,KAAC,aAAa;UAAC,KAAK,EAAC,GAAG;UAAC,IAAI,EAAE,EAAG;UAAC,OAAO,EAAE;YAAA,OAAMT,UAAU,CAACC,OAAO,CAAC;UAAA;QAAC;MAAE,EACjE;IAAA;EACF,EAEF;AAEX,CAAC;AAED,IAAMI,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAG;IACXI,IAAI,EAAE,CAAC;IACPC,WAAW,EAAEf,OAAO,CAACgB;EACtB,CAAC;EACDL,eAAe,EAAC;IACfM,cAAc,EAAE;EACjB,CAAC;EACDR,cAAc,EAAE;IACdS,OAAO,EAAElB,OAAO,CAACmB,EAAE;IACnBF,cAAc,EAAE,KAAK;IACrBG,aAAa,EAAE;EACjB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}