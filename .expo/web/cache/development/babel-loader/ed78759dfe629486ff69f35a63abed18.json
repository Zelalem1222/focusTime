{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport { useKeepAwake } from 'expo-keep-awake';\nimport { ProgressBar } from 'react-native-paper';\nimport { Countdown } from \"../components/CountDown\";\nimport { Timing } from \"./Timeing\";\nimport { RoundedButton } from \"../components/RoundedButton\";\nimport { spacing } from \"../utils/size\";\nimport { colors } from \"../utils/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ONE_SECOND_IN_MS = 1000;\nvar PATTERN = [1 * ONE_SECOND_IN_MS, 2 * ONE_SECOND_IN_MS, 3 * ONE_SECOND_IN_MS, 4 * ONE_SECOND_IN_MS, 5 * ONE_SECOND_IN_MS];\nexport var Timer = function Timer(_ref) {\n  var focusSubject = _ref.focusSubject,\n    clearSubject = _ref.clearSubject,\n    onTimerEnd = _ref.onTimerEnd;\n  useKeepAwake();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isStarted = _useState2[0],\n    setIsStarted = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    progress = _useState4[0],\n    setProgress = _useState4[1];\n  var _useState5 = useState(0.1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    minutes = _useState6[0],\n    setMinutes = _useState6[1];\n  var onEnd = function onEnd(reset) {\n    Vibration.vibrate(PATTERN);\n    setProgress(1);\n    setIsStarted(false);\n    reset();\n    onTimerEnd(focusSubject);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.countDown,\n      children: [_jsx(Countdown, {\n        minutes: minutes,\n        isPaused: !isStarted,\n        onProgress: setProgress,\n        onEnd: onEnd\n      }), _jsxs(View, {\n        style: {\n          paddingTop: spacing.lg\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Focus On:\"\n        }), _jsx(Text, {\n          style: styles.task,\n          children: focusSubject\n        })]\n      })]\n    }), _jsx(View, {\n      style: {\n        paddingTop: spacing.sm\n      },\n      children: _jsx(ProgressBar, {\n        progress: progress,\n        color: colors.white,\n        style: {\n          height: spacing.sm\n        }\n      })\n    }), _jsx(View, {\n      style: styles.timinWrapper,\n      children: _jsx(Timing, {\n        onChangeTime: setMinutes\n      })\n    }), _jsx(View, {\n      style: styles.buttonWrapper,\n      children: !isStarted ? _jsx(RoundedButton, {\n        title: \"start\",\n        onPress: function onPress() {\n          return setIsStarted(true);\n        }\n      }) : _jsx(RoundedButton, {\n        title: \"pause\",\n        onPress: function onPress() {\n          return setIsStarted(false);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.clearButton,\n      children: _jsx(RoundedButton, {\n        size: 50,\n        title: \"-\",\n        onPress: clearSubject\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  countDown: {\n    flex: 0.4,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  timinWrapper: {\n    flex: 0.2,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingTop: spacing.lg\n  },\n  buttonWrapper: {\n    flex: 0.3,\n    flexDirection: 'row',\n    paddingTop: spacing.sm,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  clearButton: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  title: {\n    color: colors.white,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  task: {\n    color: colors.white,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useKeepAwake","ProgressBar","Countdown","Timing","RoundedButton","spacing","colors","ONE_SECOND_IN_MS","PATTERN","Timer","focusSubject","clearSubject","onTimerEnd","isStarted","setIsStarted","progress","setProgress","minutes","setMinutes","onEnd","reset","Vibration","vibrate","styles","container","countDown","paddingTop","lg","title","task","sm","white","height","timinWrapper","buttonWrapper","clearButton","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","color","textAlign","fontWeight"],"sources":["C:/Users/Zola/Desktop/React-projects/project/src/features/timer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Text, Vibration } from 'react-native';\r\nimport { useKeepAwake } from 'expo-keep-awake';\r\nimport { ProgressBar } from 'react-native-paper';\r\nimport { Countdown } from '../components/CountDown';\r\nimport { Timing } from './Timeing';\r\nimport { RoundedButton } from '../components/RoundedButton';\r\nimport { spacing } from '../utils/size';\r\nimport { colors } from '../utils/colors';\r\n\r\nconst ONE_SECOND_IN_MS = 1000;\r\n\r\nconst PATTERN = [\r\n  1 * ONE_SECOND_IN_MS,\r\n  2 * ONE_SECOND_IN_MS,\r\n  3 * ONE_SECOND_IN_MS,\r\n  4 * ONE_SECOND_IN_MS,\r\n  5 * ONE_SECOND_IN_MS,\r\n];\r\n\r\nexport const Timer = ({ focusSubject , clearSubject , onTimerEnd }) => {\r\n  useKeepAwake();\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [progress, setProgress] = useState(1);\r\n  const [minutes, setMinutes] = useState(0.1);\r\n  const onEnd = (reset) => {\r\n    Vibration.vibrate(PATTERN);\r\n    setProgress(1)\r\n    setIsStarted(false)\r\n    reset()\r\n    onTimerEnd(focusSubject)\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.countDown}>\r\n        <Countdown\r\n          minutes={minutes}\r\n          isPaused={!isStarted}\r\n          onProgress={setProgress}\r\n          onEnd={onEnd}\r\n        />\r\n        <View style={{ paddingTop: spacing.lg }}>\r\n          <Text style={styles.title}>Focus On:</Text>\r\n          <Text style={styles.task}>{focusSubject}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={{ paddingTop: spacing.sm }}>\r\n        <ProgressBar\r\n          progress={progress}\r\n          color={colors.white}\r\n          style={{ height: spacing.sm }}\r\n        />\r\n      </View>\r\n      <View style={styles.timinWrapper}>\r\n        <Timing onChangeTime={setMinutes} />\r\n      </View>\r\n      <View style={styles.buttonWrapper}>\r\n        {!isStarted ? (\r\n          <RoundedButton title=\"start\" onPress={() => setIsStarted(true)} />\r\n        ) : (\r\n          <RoundedButton title=\"pause\" onPress={() => setIsStarted(false)} />\r\n        )}\r\n      </View>\r\n      <View style={styles.clearButton}>\r\n      <RoundedButton size={50} title='-' onPress={clearSubject}/>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  countDown: {\r\n    flex: 0.4,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  timinWrapper: {\r\n    flex: 0.2,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingTop: spacing.lg,\r\n  },\r\n  buttonWrapper: {\r\n    flex: 0.3,\r\n    flexDirection: 'row',\r\n    paddingTop: spacing.sm ,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  clearButton: {\r\n    flexDirection: 'row',\r\n   justifyContent: 'center'\r\n  },\r\n  title: {\r\n    color: colors.white,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  task: {\r\n    color: colors.white,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}